/**
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.crm.models

import dev.merge.client.crm.models.FieldFormatEnum
import dev.merge.client.crm.models.FieldTypeEnum
import dev.merge.client.crm.models.RemoteFieldClassForCustomObjectClassItemSchema

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * 
 *
 * @param displayName 
 * @param remoteKeyName 
 * @param description 
 * @param isRequired 
 * @param fieldType 
 * @param fieldFormat 
 * @param fieldChoices 
 * @param itemSchema 
 * @param modifiedAt This is the datetime that this object was last updated by Merge
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class RemoteFieldClassForCustomObjectClass (

    @field:JsonProperty("display_name")
    val displayName: kotlin.String? = null,

    @field:JsonProperty("remote_key_name")
    val remoteKeyName: kotlin.String? = null,

    @field:JsonProperty("description")
    val description: kotlin.String? = null,

    @field:JsonProperty("is_required")
    val isRequired: kotlin.Boolean? = null,

    @field:JsonProperty("field_type")
    val fieldType: FieldTypeEnum? = null,

    @field:JsonProperty("field_format")
    val fieldFormat: FieldFormatEnum? = null,

    @field:JsonProperty("field_choices")
    val fieldChoices: kotlin.collections.List<kotlin.String>? = null,

    @field:JsonProperty("item_schema")
    val itemSchema: RemoteFieldClassForCustomObjectClassItemSchema? = null,

    /* This is the datetime that this object was last updated by Merge */
    @field:JsonProperty("modified_at")
    val modifiedAt: java.time.OffsetDateTime? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("display_name")
        val displayName: JsonNode?,

        @field:JsonProperty("remote_key_name")
        val remoteKeyName: JsonNode?,

        @field:JsonProperty("description")
        val description: JsonNode?,

        @field:JsonProperty("is_required")
        val isRequired: JsonNode?,

        @field:JsonProperty("field_type")
        val fieldType: JsonNode?,

        @field:JsonProperty("field_format")
        val fieldFormat: JsonNode?,

        @field:JsonProperty("field_choices")
        val fieldChoices: kotlin.collections.List<JsonNode>?,

        @field:JsonProperty("item_schema")
        val itemSchema: JsonNode?,

        @field:JsonProperty("modified_at")
        val modifiedAt: JsonNode?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: RemoteFieldClassForCustomObjectClass.Expanded): RemoteFieldClassForCustomObjectClass {
            return RemoteFieldClassForCustomObjectClass(
                displayName = ApiClient.jsonConvertSafe(expanded.displayName),
                remoteKeyName = ApiClient.jsonConvertSafe(expanded.remoteKeyName),
                description = ApiClient.jsonConvertSafe(expanded.description),
                isRequired = ApiClient.jsonConvertSafe(expanded.isRequired),
                fieldType = ApiClient.jsonConvertSafe(expanded.fieldType),
                fieldFormat = ApiClient.jsonConvertSafe(expanded.fieldFormat),
                fieldChoices = ApiClient.jsonConvertSafe(expanded.fieldChoices),
                itemSchema = ApiClient.jsonConvertSafe(expanded.itemSchema),
                modifiedAt = ApiClient.jsonConvertSafe(expanded.modifiedAt)
            )
        }
    }
}

