/**
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.crm.models

import dev.merge.client.crm.models.Address
import dev.merge.client.crm.models.EmailAddress
import dev.merge.client.crm.models.PhoneNumber
import dev.merge.client.shared.RemoteData
import dev.merge.client.crm.models.RemoteField

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * # The Lead Object ### Description The `Lead` object is used to represent an individual who is a potential customer. ### Usage Example TODO
 *
 * @param owner The lead's owner.
 * @param leadSource The lead's source.
 * @param title The lead's title.
 * @param company The lead's company.
 * @param firstName The lead's first name.
 * @param lastName The lead's last name.
 * @param addresses 
 * @param emailAddresses 
 * @param phoneNumbers 
 * @param remoteUpdatedAt When the third party's lead was updated.
 * @param remoteCreatedAt When the third party's lead was created.
 * @param convertedDate When the lead was converted.
 * @param convertedContact The contact of the converted lead.
 * @param convertedAccount The account of the converted lead.
 * @param remoteWasDeleted 
 * @param id 
 * @param remoteId The third-party API ID of the matching object.
 * @param modifiedAt This is the datetime that this object was last updated by Merge
 * @param fieldMappings 
 * @param remoteData 
 * @param remoteFields 
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class Lead (

    /* The lead's owner. */
    @field:JsonProperty("owner")
    val owner: java.util.UUID? = null,

    /* The lead's source. */
    @field:JsonProperty("lead_source")
    val leadSource: kotlin.String? = null,

    /* The lead's title. */
    @field:JsonProperty("title")
    val title: kotlin.String? = null,

    /* The lead's company. */
    @field:JsonProperty("company")
    val company: kotlin.String? = null,

    /* The lead's first name. */
    @field:JsonProperty("first_name")
    val firstName: kotlin.String? = null,

    /* The lead's last name. */
    @field:JsonProperty("last_name")
    val lastName: kotlin.String? = null,

    @field:JsonProperty("addresses")
    val addresses: kotlin.collections.List<Address>? = null,

    @field:JsonProperty("email_addresses")
    val emailAddresses: kotlin.collections.List<EmailAddress>? = null,

    @field:JsonProperty("phone_numbers")
    val phoneNumbers: kotlin.collections.List<PhoneNumber>? = null,

    /* When the third party's lead was updated. */
    @field:JsonProperty("remote_updated_at")
    val remoteUpdatedAt: java.time.OffsetDateTime? = null,

    /* When the third party's lead was created. */
    @field:JsonProperty("remote_created_at")
    val remoteCreatedAt: java.time.OffsetDateTime? = null,

    /* When the lead was converted. */
    @field:JsonProperty("converted_date")
    val convertedDate: java.time.OffsetDateTime? = null,

    /* The contact of the converted lead. */
    @field:JsonProperty("converted_contact")
    val convertedContact: java.util.UUID? = null,

    /* The account of the converted lead. */
    @field:JsonProperty("converted_account")
    val convertedAccount: java.util.UUID? = null,

    @field:JsonProperty("remote_was_deleted")
    val remoteWasDeleted: kotlin.Boolean? = null,

    @field:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* The third-party API ID of the matching object. */
    @field:JsonProperty("remote_id")
    val remoteId: kotlin.String? = null,

    /* This is the datetime that this object was last updated by Merge */
    @field:JsonProperty("modified_at")
    val modifiedAt: java.time.OffsetDateTime? = null,

    @field:JsonProperty("field_mappings")
    val fieldMappings: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("remote_data")
    val remoteData: kotlin.collections.List<RemoteData>? = null,

    @field:JsonProperty("remote_fields")
    val remoteFields: kotlin.collections.List<RemoteField>? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("owner")
        val owner: JsonNode?,

        @field:JsonProperty("lead_source")
        val leadSource: JsonNode?,

        @field:JsonProperty("title")
        val title: JsonNode?,

        @field:JsonProperty("company")
        val company: JsonNode?,

        @field:JsonProperty("first_name")
        val firstName: JsonNode?,

        @field:JsonProperty("last_name")
        val lastName: JsonNode?,

        @field:JsonProperty("addresses")
        val addresses: kotlin.collections.List<JsonNode>?,

        @field:JsonProperty("email_addresses")
        val emailAddresses: kotlin.collections.List<JsonNode>?,

        @field:JsonProperty("phone_numbers")
        val phoneNumbers: kotlin.collections.List<JsonNode>?,

        @field:JsonProperty("remote_updated_at")
        val remoteUpdatedAt: JsonNode?,

        @field:JsonProperty("remote_created_at")
        val remoteCreatedAt: JsonNode?,

        @field:JsonProperty("converted_date")
        val convertedDate: JsonNode?,

        @field:JsonProperty("converted_contact")
        val convertedContact: JsonNode?,

        @field:JsonProperty("converted_account")
        val convertedAccount: JsonNode?,

        @field:JsonProperty("remote_was_deleted")
        val remoteWasDeleted: JsonNode?,

        @field:JsonProperty("id")
        val id: JsonNode?,

        @field:JsonProperty("remote_id")
        val remoteId: JsonNode?,

        @field:JsonProperty("modified_at")
        val modifiedAt: JsonNode?,

        @field:JsonProperty("field_mappings")
        val fieldMappings: JsonNode?,

        @field:JsonProperty("remote_data")
        val remoteData: kotlin.collections.List<JsonNode>?,

        @field:JsonProperty("remote_fields")
        val remoteFields: kotlin.collections.List<JsonNode>?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: Lead.Expanded): Lead {
            return Lead(
                owner = ApiClient.jsonConvertSafe(expanded.owner),
                leadSource = ApiClient.jsonConvertSafe(expanded.leadSource),
                title = ApiClient.jsonConvertSafe(expanded.title),
                company = ApiClient.jsonConvertSafe(expanded.company),
                firstName = ApiClient.jsonConvertSafe(expanded.firstName),
                lastName = ApiClient.jsonConvertSafe(expanded.lastName),
                addresses = ApiClient.jsonConvertSafe(expanded.addresses),
                emailAddresses = ApiClient.jsonConvertSafe(expanded.emailAddresses),
                phoneNumbers = ApiClient.jsonConvertSafe(expanded.phoneNumbers),
                remoteUpdatedAt = ApiClient.jsonConvertSafe(expanded.remoteUpdatedAt),
                remoteCreatedAt = ApiClient.jsonConvertSafe(expanded.remoteCreatedAt),
                convertedDate = ApiClient.jsonConvertSafe(expanded.convertedDate),
                convertedContact = ApiClient.jsonConvertSafe(expanded.convertedContact),
                convertedAccount = ApiClient.jsonConvertSafe(expanded.convertedAccount),
                remoteWasDeleted = ApiClient.jsonConvertSafe(expanded.remoteWasDeleted),
                id = ApiClient.jsonConvertSafe(expanded.id),
                remoteId = ApiClient.jsonConvertSafe(expanded.remoteId),
                modifiedAt = ApiClient.jsonConvertSafe(expanded.modifiedAt),
                fieldMappings = ApiClient.jsonConvertSafe(expanded.fieldMappings),
                remoteData = ApiClient.jsonConvertSafe(expanded.remoteData),
                remoteFields = ApiClient.jsonConvertSafe(expanded.remoteFields)
            )
        }
    }
}

