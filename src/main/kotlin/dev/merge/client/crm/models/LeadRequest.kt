/**
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.crm.models


import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * # The Lead Object ### Description The `Lead` object is used to represent an individual who is a potential customer. ### Usage Example TODO
 *
 * @param owner The lead's owner.
 * @param leadSource The lead's source.
 * @param title The lead's title.
 * @param company The lead's company.
 * @param firstName The lead's first name.
 * @param lastName The lead's last name.
 * @param convertedDate When the lead was converted.
 * @param convertedContact The contact of the converted lead.
 * @param convertedAccount The account of the converted lead.
 * @param integrationParams 
 * @param linkedAccountParams 
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class LeadRequest (

    /* The lead's owner. */
    @field:JsonProperty("owner")
    val owner: java.util.UUID? = null,

    /* The lead's source. */
    @field:JsonProperty("lead_source")
    val leadSource: kotlin.String? = null,

    /* The lead's title. */
    @field:JsonProperty("title")
    val title: kotlin.String? = null,

    /* The lead's company. */
    @field:JsonProperty("company")
    val company: kotlin.String? = null,

    /* The lead's first name. */
    @field:JsonProperty("first_name")
    val firstName: kotlin.String? = null,

    /* The lead's last name. */
    @field:JsonProperty("last_name")
    val lastName: kotlin.String? = null,

    /* When the lead was converted. */
    @field:JsonProperty("converted_date")
    val convertedDate: java.time.OffsetDateTime? = null,

    /* The contact of the converted lead. */
    @field:JsonProperty("converted_contact")
    val convertedContact: java.util.UUID? = null,

    /* The account of the converted lead. */
    @field:JsonProperty("converted_account")
    val convertedAccount: java.util.UUID? = null,

    @field:JsonProperty("integration_params")
    val integrationParams: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("linked_account_params")
    val linkedAccountParams: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("owner")
        val owner: JsonNode?,

        @field:JsonProperty("lead_source")
        val leadSource: JsonNode?,

        @field:JsonProperty("title")
        val title: JsonNode?,

        @field:JsonProperty("company")
        val company: JsonNode?,

        @field:JsonProperty("first_name")
        val firstName: JsonNode?,

        @field:JsonProperty("last_name")
        val lastName: JsonNode?,

        @field:JsonProperty("converted_date")
        val convertedDate: JsonNode?,

        @field:JsonProperty("converted_contact")
        val convertedContact: JsonNode?,

        @field:JsonProperty("converted_account")
        val convertedAccount: JsonNode?,

        @field:JsonProperty("integration_params")
        val integrationParams: JsonNode?,

        @field:JsonProperty("linked_account_params")
        val linkedAccountParams: JsonNode?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: LeadRequest.Expanded): LeadRequest {
            return LeadRequest(
                owner = ApiClient.jsonConvertSafe(expanded.owner),
                leadSource = ApiClient.jsonConvertSafe(expanded.leadSource),
                title = ApiClient.jsonConvertSafe(expanded.title),
                company = ApiClient.jsonConvertSafe(expanded.company),
                firstName = ApiClient.jsonConvertSafe(expanded.firstName),
                lastName = ApiClient.jsonConvertSafe(expanded.lastName),
                convertedDate = ApiClient.jsonConvertSafe(expanded.convertedDate),
                convertedContact = ApiClient.jsonConvertSafe(expanded.convertedContact),
                convertedAccount = ApiClient.jsonConvertSafe(expanded.convertedAccount),
                integrationParams = ApiClient.jsonConvertSafe(expanded.integrationParams),
                linkedAccountParams = ApiClient.jsonConvertSafe(expanded.linkedAccountParams)
            )
        }
    }
}

