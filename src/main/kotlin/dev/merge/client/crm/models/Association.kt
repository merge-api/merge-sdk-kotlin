/**
 * Merge CRM API
 *
 * The unified API for building rich integrations with multiple CRM platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.crm.models


import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * 
 *
 * @param sourceObject 
 * @param targetObject 
 * @param associationType 
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class Association (

    @field:JsonProperty("source_object")
    val sourceObject: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("target_object")
    val targetObject: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("association_type")
    val associationType: java.util.UUID? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("source_object")
        val sourceObject: JsonNode?,

        @field:JsonProperty("target_object")
        val targetObject: JsonNode?,

        @field:JsonProperty("association_type")
        val associationType: JsonNode?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: Association.Expanded): Association {
            return Association(
                sourceObject = ApiClient.jsonConvertSafe(expanded.sourceObject),
                targetObject = ApiClient.jsonConvertSafe(expanded.targetObject),
                associationType = ApiClient.jsonConvertSafe(expanded.associationType)
            )
        }
    }
}

