/**
 * Merge Marketing Automation API
 *
 * The unified API for building rich integrations with multiple Marketing Automation platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.mktg.models

import dev.merge.client.mktg.models.TriggerTypeEnum

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * # The Automation Object ### Description The `Automation` object is used to represent an automation, workflow or custom event in the remote system. ### Usage Example Fetch from the `GET /api/mktg/v1/automations` endpoint and view their automation_trigger configurations.
 *
 * @param actions The actions performed by this automation.
 * @param name The automation's name.
 * @param triggerType The trigger type for running this automation.  * `TRIGGER_EVENT` - TRIGGER_EVENT * `RECURRENCE` - RECURRENCE
 * @param startDate The automation's start date.
 * @param endDate The automation's end date.
 * @param description The automation’s description.
 * @param status The automation's status.
 * @param automationTrigger The trigger configuraton for the automation.
 * @param remoteWasDeleted Indicates whether or not this object has been deleted by third party webhooks.
 * @param id 
 * @param remoteId The third-party API ID of the matching object.
 * @param modifiedAt This is the datetime that this object was last updated by Merge
 * @param fieldMappings 
 * @param remoteData 
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class Automation (

    /* The actions performed by this automation. */
    @field:JsonProperty("actions")
    val actions: kotlin.collections.List<java.util.UUID>,

    /* The automation's name. */
    @field:JsonProperty("name")
    val name: kotlin.String? = null,

    /* The trigger type for running this automation.  * `TRIGGER_EVENT` - TRIGGER_EVENT * `RECURRENCE` - RECURRENCE */
    @field:JsonProperty("trigger_type")
    val triggerType: TriggerTypeEnum? = null,

    /* The automation's start date. */
    @field:JsonProperty("start_date")
    val startDate: java.time.OffsetDateTime? = null,

    /* The automation's end date. */
    @field:JsonProperty("end_date")
    val endDate: java.time.OffsetDateTime? = null,

    /* The automation’s description. */
    @field:JsonProperty("description")
    val description: kotlin.String? = null,

    /* The automation's status. */
    @field:JsonProperty("status")
    val status: kotlin.String? = null,

    /* The trigger configuraton for the automation. */
    @field:JsonProperty("automation_trigger")
    val automationTrigger: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* Indicates whether or not this object has been deleted by third party webhooks. */
    @field:JsonProperty("remote_was_deleted")
    val remoteWasDeleted: kotlin.Boolean? = null,

    @field:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* The third-party API ID of the matching object. */
    @field:JsonProperty("remote_id")
    val remoteId: kotlin.String? = null,

    /* This is the datetime that this object was last updated by Merge */
    @field:JsonProperty("modified_at")
    val modifiedAt: java.time.OffsetDateTime? = null,

    @field:JsonProperty("field_mappings")
    val fieldMappings: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("remote_data")
    val remoteData: kotlin.collections.List<kotlin.collections.Map<kotlin.String, kotlin.Any>>? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("actions")
        val actions: kotlin.collections.List<JsonNode>,

        @field:JsonProperty("name")
        val name: JsonNode?,

        @field:JsonProperty("trigger_type")
        val triggerType: JsonNode?,

        @field:JsonProperty("start_date")
        val startDate: JsonNode?,

        @field:JsonProperty("end_date")
        val endDate: JsonNode?,

        @field:JsonProperty("description")
        val description: JsonNode?,

        @field:JsonProperty("status")
        val status: JsonNode?,

        @field:JsonProperty("automation_trigger")
        val automationTrigger: JsonNode?,

        @field:JsonProperty("remote_was_deleted")
        val remoteWasDeleted: JsonNode?,

        @field:JsonProperty("id")
        val id: JsonNode?,

        @field:JsonProperty("remote_id")
        val remoteId: JsonNode?,

        @field:JsonProperty("modified_at")
        val modifiedAt: JsonNode?,

        @field:JsonProperty("field_mappings")
        val fieldMappings: JsonNode?,

        @field:JsonProperty("remote_data")
        val remoteData: kotlin.collections.List<JsonNode>?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: Automation.Expanded): Automation {
            return Automation(
                actions = ApiClient.jsonConvertRequiredSafe(expanded.actions),
                name = ApiClient.jsonConvertSafe(expanded.name),
                triggerType = ApiClient.jsonConvertSafe(expanded.triggerType),
                startDate = ApiClient.jsonConvertSafe(expanded.startDate),
                endDate = ApiClient.jsonConvertSafe(expanded.endDate),
                description = ApiClient.jsonConvertSafe(expanded.description),
                status = ApiClient.jsonConvertSafe(expanded.status),
                automationTrigger = ApiClient.jsonConvertSafe(expanded.automationTrigger),
                remoteWasDeleted = ApiClient.jsonConvertSafe(expanded.remoteWasDeleted),
                id = ApiClient.jsonConvertSafe(expanded.id),
                remoteId = ApiClient.jsonConvertSafe(expanded.remoteId),
                modifiedAt = ApiClient.jsonConvertSafe(expanded.modifiedAt),
                fieldMappings = ApiClient.jsonConvertSafe(expanded.fieldMappings),
                remoteData = ApiClient.jsonConvertSafe(expanded.remoteData)
            )
        }
    }
}

