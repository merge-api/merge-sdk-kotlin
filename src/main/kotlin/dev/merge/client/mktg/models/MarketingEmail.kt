/**
 * Merge Marketing Automation API
 *
 * The unified API for building rich integrations with multiple Marketing Automation platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.mktg.models

import dev.merge.client.mktg.models.MarketingEmailStatusEnum

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * # The Marketing Email Object ### Description The `MarketingEmail` object is used to represent a marketing email in the remote system. ### Usage Example Fetch from the `GET /api/mktg/v1/emails` endpoint and view their html_body properties.
 *
 * @param campaigns The campaigns receiving this marketing email.
 * @param name The marketing email's name.
 * @param subject The marketing email's subject.
 * @param body The marketing email's body.
 * @param htmlBody The marketing email's html body.
 * @param fromName The marketing email's from name.
 * @param fromEmail The marketing email's from email.
 * @param preview The marketing email's preview.
 * @param replyTo The marketing email's reply-to.
 * @param remoteCreatedAt When the marketing email was created in the remote system.
 * @param remoteUpdatedAt When the marketing email was last updated in the remote system.
 * @param status The marketing email's status.
 * @param sendDate When the marketing email was sent.
 * @param template The marketing email's template.
 * @param id 
 * @param remoteId The third-party API ID of the matching object.
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class MarketingEmail (

    /* The campaigns receiving this marketing email. */
    @field:JsonProperty("campaigns")
    val campaigns: kotlin.collections.List<java.util.UUID>,

    /* The marketing email's name. */
    @field:JsonProperty("name")
    val name: kotlin.String? = null,

    /* The marketing email's subject. */
    @field:JsonProperty("subject")
    val subject: kotlin.String? = null,

    /* The marketing email's body. */
    @field:JsonProperty("body")
    val body: kotlin.String? = null,

    /* The marketing email's html body. */
    @field:JsonProperty("html_body")
    val htmlBody: kotlin.String? = null,

    /* The marketing email's from name. */
    @field:JsonProperty("from_name")
    val fromName: kotlin.String? = null,

    /* The marketing email's from email. */
    @field:JsonProperty("from_email")
    val fromEmail: kotlin.String? = null,

    /* The marketing email's preview. */
    @field:JsonProperty("preview")
    val preview: kotlin.String? = null,

    /* The marketing email's reply-to. */
    @field:JsonProperty("reply_to")
    val replyTo: kotlin.String? = null,

    /* When the marketing email was created in the remote system. */
    @field:JsonProperty("remote_created_at")
    val remoteCreatedAt: java.time.OffsetDateTime? = null,

    /* When the marketing email was last updated in the remote system. */
    @field:JsonProperty("remote_updated_at")
    val remoteUpdatedAt: java.time.OffsetDateTime? = null,

    /* The marketing email's status. */
    @field:JsonProperty("status")
    val status: MarketingEmailStatusEnum? = null,

    /* When the marketing email was sent. */
    @field:JsonProperty("send_date")
    val sendDate: java.time.OffsetDateTime? = null,

    /* The marketing email's template. */
    @field:JsonProperty("template")
    val template: java.util.UUID? = null,

    @field:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* The third-party API ID of the matching object. */
    @field:JsonProperty("remote_id")
    val remoteId: kotlin.String? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("campaigns")
        val campaigns: kotlin.collections.List<JsonNode>,

        @field:JsonProperty("name")
        val name: JsonNode?,

        @field:JsonProperty("subject")
        val subject: JsonNode?,

        @field:JsonProperty("body")
        val body: JsonNode?,

        @field:JsonProperty("html_body")
        val htmlBody: JsonNode?,

        @field:JsonProperty("from_name")
        val fromName: JsonNode?,

        @field:JsonProperty("from_email")
        val fromEmail: JsonNode?,

        @field:JsonProperty("preview")
        val preview: JsonNode?,

        @field:JsonProperty("reply_to")
        val replyTo: JsonNode?,

        @field:JsonProperty("remote_created_at")
        val remoteCreatedAt: JsonNode?,

        @field:JsonProperty("remote_updated_at")
        val remoteUpdatedAt: JsonNode?,

        @field:JsonProperty("status")
        val status: JsonNode?,

        @field:JsonProperty("send_date")
        val sendDate: JsonNode?,

        @field:JsonProperty("template")
        val template: JsonNode?,

        @field:JsonProperty("id")
        val id: JsonNode?,

        @field:JsonProperty("remote_id")
        val remoteId: JsonNode?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: MarketingEmail.Expanded): MarketingEmail {
            return MarketingEmail(
                campaigns = ApiClient.jsonConvertRequiredSafe(expanded.campaigns),
                name = ApiClient.jsonConvertSafe(expanded.name),
                subject = ApiClient.jsonConvertSafe(expanded.subject),
                body = ApiClient.jsonConvertSafe(expanded.body),
                htmlBody = ApiClient.jsonConvertSafe(expanded.htmlBody),
                fromName = ApiClient.jsonConvertSafe(expanded.fromName),
                fromEmail = ApiClient.jsonConvertSafe(expanded.fromEmail),
                preview = ApiClient.jsonConvertSafe(expanded.preview),
                replyTo = ApiClient.jsonConvertSafe(expanded.replyTo),
                remoteCreatedAt = ApiClient.jsonConvertSafe(expanded.remoteCreatedAt),
                remoteUpdatedAt = ApiClient.jsonConvertSafe(expanded.remoteUpdatedAt),
                status = ApiClient.jsonConvertSafe(expanded.status),
                sendDate = ApiClient.jsonConvertSafe(expanded.sendDate),
                template = ApiClient.jsonConvertSafe(expanded.template),
                id = ApiClient.jsonConvertSafe(expanded.id),
                remoteId = ApiClient.jsonConvertSafe(expanded.remoteId)
            )
        }
    }
}

