/**
 * Merge ATS API
 *
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.ats.models

import dev.merge.client.ats.models.OverallRecommendationEnum
import dev.merge.client.shared.RemoteData

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * # The Scorecard Object ### Description The `Scorecard` object is used to represent an interviewer's candidate recommendation based on a particular interview. ### Usage Example Fetch from the `LIST Scorecards` endpoint and filter by `application` to show all scorecard for an applicant.
 *
 * @param id 
 * @param remoteId The third-party API ID of the matching object.
 * @param application The application being scored.
 * @param interview The interview being scored.
 * @param interviewer The interviewer doing the scoring.
 * @param remoteCreatedAt When the third party's scorecard was created.
 * @param submittedAt When the scorecard was submitted.
 * @param overallRecommendation The inteviewer's recommendation.  * `DEFINITELY_NO` - DEFINITELY_NO * `NO` - NO * `YES` - YES * `STRONG_YES` - STRONG_YES * `NO_DECISION` - NO_DECISION
 * @param remoteWasDeleted Indicates whether or not this object has been deleted by third party webhooks.
 * @param modifiedAt This is the datetime that this object was last updated by Merge
 * @param fieldMappings 
 * @param remoteData 
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class Scorecard (

    @field:JsonProperty("id")
    val id: java.util.UUID? = null,

    /* The third-party API ID of the matching object. */
    @field:JsonProperty("remote_id")
    val remoteId: kotlin.String? = null,

    /* The application being scored. */
    @field:JsonProperty("application")
    val application: java.util.UUID? = null,

    /* The interview being scored. */
    @field:JsonProperty("interview")
    val interview: java.util.UUID? = null,

    /* The interviewer doing the scoring. */
    @field:JsonProperty("interviewer")
    val interviewer: java.util.UUID? = null,

    /* When the third party's scorecard was created. */
    @field:JsonProperty("remote_created_at")
    val remoteCreatedAt: java.time.OffsetDateTime? = null,

    /* When the scorecard was submitted. */
    @field:JsonProperty("submitted_at")
    val submittedAt: java.time.OffsetDateTime? = null,

    /* The inteviewer's recommendation.  * `DEFINITELY_NO` - DEFINITELY_NO * `NO` - NO * `YES` - YES * `STRONG_YES` - STRONG_YES * `NO_DECISION` - NO_DECISION */
    @field:JsonProperty("overall_recommendation")
    val overallRecommendation: OverallRecommendationEnum? = null,

    /* Indicates whether or not this object has been deleted by third party webhooks. */
    @field:JsonProperty("remote_was_deleted")
    val remoteWasDeleted: kotlin.Boolean? = null,

    /* This is the datetime that this object was last updated by Merge */
    @field:JsonProperty("modified_at")
    val modifiedAt: java.time.OffsetDateTime? = null,

    @field:JsonProperty("field_mappings")
    val fieldMappings: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("remote_data")
    val remoteData: kotlin.collections.List<RemoteData>? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("id")
        val id: JsonNode?,

        @field:JsonProperty("remote_id")
        val remoteId: JsonNode?,

        @field:JsonProperty("application")
        val application: JsonNode?,

        @field:JsonProperty("interview")
        val interview: JsonNode?,

        @field:JsonProperty("interviewer")
        val interviewer: JsonNode?,

        @field:JsonProperty("remote_created_at")
        val remoteCreatedAt: JsonNode?,

        @field:JsonProperty("submitted_at")
        val submittedAt: JsonNode?,

        @field:JsonProperty("overall_recommendation")
        val overallRecommendation: JsonNode?,

        @field:JsonProperty("remote_was_deleted")
        val remoteWasDeleted: JsonNode?,

        @field:JsonProperty("modified_at")
        val modifiedAt: JsonNode?,

        @field:JsonProperty("field_mappings")
        val fieldMappings: JsonNode?,

        @field:JsonProperty("remote_data")
        val remoteData: kotlin.collections.List<JsonNode>?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: Scorecard.Expanded): Scorecard {
            return Scorecard(
                id = ApiClient.jsonConvertSafe(expanded.id),
                remoteId = ApiClient.jsonConvertSafe(expanded.remoteId),
                application = ApiClient.jsonConvertSafe(expanded.application),
                interview = ApiClient.jsonConvertSafe(expanded.interview),
                interviewer = ApiClient.jsonConvertSafe(expanded.interviewer),
                remoteCreatedAt = ApiClient.jsonConvertSafe(expanded.remoteCreatedAt),
                submittedAt = ApiClient.jsonConvertSafe(expanded.submittedAt),
                overallRecommendation = ApiClient.jsonConvertSafe(expanded.overallRecommendation),
                remoteWasDeleted = ApiClient.jsonConvertSafe(expanded.remoteWasDeleted),
                modifiedAt = ApiClient.jsonConvertSafe(expanded.modifiedAt),
                fieldMappings = ApiClient.jsonConvertSafe(expanded.fieldMappings),
                remoteData = ApiClient.jsonConvertSafe(expanded.remoteData)
            )
        }
    }
}

