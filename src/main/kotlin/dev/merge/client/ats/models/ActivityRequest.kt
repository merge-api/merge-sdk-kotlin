/**
 * Merge ATS API
 *
 * The unified API for building rich integrations with multiple Applicant Tracking System platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.ats.models

import dev.merge.client.ats.models.ActivityTypeEnum
import dev.merge.client.ats.models.VisibilityEnum

import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * # The Activity Object ### Description The `Activity` object is used to represent an activity for a candidate performed by a user. ### Usage Example Fetch from the `LIST Activities` endpoint and filter by `ID` to show all activities.
 *
 * @param user The user that performed the action.
 * @param activityType The activity's type.  * `NOTE` - NOTE * `EMAIL` - EMAIL * `OTHER` - OTHER
 * @param subject The activity's subject.
 * @param body The activity's body.
 * @param visibility The activity's visibility.  * `ADMIN_ONLY` - ADMIN_ONLY * `PUBLIC` - PUBLIC * `PRIVATE` - PRIVATE
 * @param candidate The activity’s candidate.
 * @param integrationParams 
 * @param linkedAccountParams 
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class ActivityRequest (

    /* The user that performed the action. */
    @field:JsonProperty("user")
    val user: java.util.UUID? = null,

    /* The activity's type.  * `NOTE` - NOTE * `EMAIL` - EMAIL * `OTHER` - OTHER */
    @field:JsonProperty("activity_type")
    val activityType: ActivityTypeEnum? = null,

    /* The activity's subject. */
    @field:JsonProperty("subject")
    val subject: kotlin.String? = null,

    /* The activity's body. */
    @field:JsonProperty("body")
    val body: kotlin.String? = null,

    /* The activity's visibility.  * `ADMIN_ONLY` - ADMIN_ONLY * `PUBLIC` - PUBLIC * `PRIVATE` - PRIVATE */
    @field:JsonProperty("visibility")
    val visibility: VisibilityEnum? = null,

    /* The activity’s candidate. */
    @field:JsonProperty("candidate")
    val candidate: kotlin.String? = null,

    @field:JsonProperty("integration_params")
    val integrationParams: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    @field:JsonProperty("linked_account_params")
    val linkedAccountParams: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("user")
        val user: JsonNode?,

        @field:JsonProperty("activity_type")
        val activityType: JsonNode?,

        @field:JsonProperty("subject")
        val subject: JsonNode?,

        @field:JsonProperty("body")
        val body: JsonNode?,

        @field:JsonProperty("visibility")
        val visibility: JsonNode?,

        @field:JsonProperty("candidate")
        val candidate: JsonNode?,

        @field:JsonProperty("integration_params")
        val integrationParams: JsonNode?,

        @field:JsonProperty("linked_account_params")
        val linkedAccountParams: JsonNode?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: ActivityRequest.Expanded): ActivityRequest {
            return ActivityRequest(
                user = ApiClient.jsonConvertSafe(expanded.user),
                activityType = ApiClient.jsonConvertSafe(expanded.activityType),
                subject = ApiClient.jsonConvertSafe(expanded.subject),
                body = ApiClient.jsonConvertSafe(expanded.body),
                visibility = ApiClient.jsonConvertSafe(expanded.visibility),
                candidate = ApiClient.jsonConvertSafe(expanded.candidate),
                integrationParams = ApiClient.jsonConvertSafe(expanded.integrationParams),
                linkedAccountParams = ApiClient.jsonConvertSafe(expanded.linkedAccountParams)
            )
        }
    }
}

