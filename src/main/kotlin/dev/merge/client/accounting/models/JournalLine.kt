/**
 * Merge Accounting API
 *
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.accounting.models


import com.fasterxml.jackson.annotation.JsonIgnoreProperties
import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.databind.JsonNode
import dev.merge.client.shared.ApiClient

/**
 * # The JournalLine Object ### Description The `JournalLine` object is used to represent a journal entry's line items.  ### Usage Example Fetch from the `GET JournalEntry` endpoint and view the journal entry's line items.
 *
 * @param remoteId The third-party API ID of the matching object.
 * @param account 
 * @param netAmount The value of the line item including taxes and other fees.
 * @param trackingCategory 
 * @param trackingCategories 
 * @param contact 
 * @param description The line's description.
 * @param exchangeRate The journal line item's exchange rate.
 * @param modifiedAt This is the datetime that this object was last updated by Merge
 */

@JsonIgnoreProperties(ignoreUnknown = true)
data class JournalLine (

    /* The third-party API ID of the matching object. */
    @field:JsonProperty("remote_id")
    val remoteId: kotlin.String? = null,

    @field:JsonProperty("account")
    val account: java.util.UUID? = null,

    /* The value of the line item including taxes and other fees. */
    @field:JsonProperty("net_amount")
    val netAmount: kotlin.Double? = null,

    @field:JsonProperty("tracking_category")
    val trackingCategory: java.util.UUID? = null,

    @field:JsonProperty("tracking_categories")
    val trackingCategories: kotlin.collections.List<java.util.UUID>? = null,

    @field:JsonProperty("contact")
    val contact: java.util.UUID? = null,

    /* The line's description. */
    @field:JsonProperty("description")
    val description: kotlin.String? = null,

    /* The journal line item's exchange rate. */
    @field:JsonProperty("exchange_rate")
    val exchangeRate: java.math.BigDecimal? = null,

    /* This is the datetime that this object was last updated by Merge */
    @field:JsonProperty("modified_at")
    val modifiedAt: java.time.OffsetDateTime? = null

) {

    @JsonIgnoreProperties(ignoreUnknown = true)
    data class Expanded(
        @field:JsonProperty("remote_id")
        val remoteId: JsonNode?,

        @field:JsonProperty("account")
        val account: JsonNode?,

        @field:JsonProperty("net_amount")
        val netAmount: JsonNode?,

        @field:JsonProperty("tracking_category")
        val trackingCategory: JsonNode?,

        @field:JsonProperty("tracking_categories")
        val trackingCategories: kotlin.collections.List<JsonNode>?,

        @field:JsonProperty("contact")
        val contact: JsonNode?,

        @field:JsonProperty("description")
        val description: JsonNode?,

        @field:JsonProperty("exchange_rate")
        val exchangeRate: JsonNode?,

        @field:JsonProperty("modified_at")
        val modifiedAt: JsonNode?

    )


    companion object {
        @JvmStatic
        fun normalize(expanded: JournalLine.Expanded): JournalLine {
            return JournalLine(
                remoteId = ApiClient.jsonConvertSafe(expanded.remoteId),
                account = ApiClient.jsonConvertSafe(expanded.account),
                netAmount = ApiClient.jsonConvertSafe(expanded.netAmount),
                trackingCategory = ApiClient.jsonConvertSafe(expanded.trackingCategory),
                trackingCategories = ApiClient.jsonConvertSafe(expanded.trackingCategories),
                contact = ApiClient.jsonConvertSafe(expanded.contact),
                description = ApiClient.jsonConvertSafe(expanded.description),
                exchangeRate = ApiClient.jsonConvertSafe(expanded.exchangeRate),
                modifiedAt = ApiClient.jsonConvertSafe(expanded.modifiedAt)
            )
        }
    }
}

