/**
 * Merge Accounting API
 *
 * The unified API for building rich integrations with multiple Accounting & Finance platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package dev.merge.client.accounting.apis

import dev.merge.client.accounting.models.Invoice
import dev.merge.client.accounting.models.InvoiceEndpointRequest
import dev.merge.client.accounting.models.InvoiceResponse
import dev.merge.client.accounting.models.MetaResponse

import io.ktor.client.HttpClientConfig
import io.ktor.client.request.forms.formData
import io.ktor.client.engine.HttpClientEngine
import io.ktor.http.ParametersBuilder
import io.ktor.client.plugins.contentnegotiation.ContentNegotiation
import io.ktor.serialization.jackson.jackson
import io.ktor.client.call.body
import kotlinx.coroutines.GlobalScope
import kotlinx.coroutines.future.future
import java.util.concurrent.CompletableFuture

import com.fasterxml.jackson.databind.ObjectMapper

import dev.merge.client.shared.*

open class InvoicesApi(
baseUrl: String = ApiClient.BASE_URL + "accounting/v1",
httpClientEngine: HttpClientEngine? = null,
httpClientConfig: (HttpClientConfig<*>.() -> Unit)? = null,
json: ObjectMapper = ApiClient.JSON_DEFAULT,
) : ApiClient(baseUrl, httpClientEngine, httpClientConfig, json) {

    data class InvoicesCreateRequest (
        val invoiceEndpointRequest: InvoiceEndpointRequest,
        val isDebugMode: kotlin.Boolean? = null,
        val runAsync: kotlin.Boolean? = null
    )

    data class InvoicesListRequest (
        val companyId: kotlin.String? = null,
        val contactId: kotlin.String? = null,
        val createdAfter: java.time.OffsetDateTime? = null,
        val createdBefore: java.time.OffsetDateTime? = null,
        val cursor: kotlin.String? = null,
        val expand: kotlin.String? = null,
        val includeDeletedData: kotlin.Boolean? = null,
        val includeRemoteData: kotlin.Boolean? = null,
        val modifiedAfter: java.time.OffsetDateTime? = null,
        val modifiedBefore: java.time.OffsetDateTime? = null,
        val pageSize: kotlin.Int? = null,
        val remoteFields: kotlin.String? = null,
        val remoteId: kotlin.String? = null,
        val showEnumOrigins: kotlin.String? = null,
        val type: kotlin.String? = null
    )

    data class InvoicesRetrieveRequest (
        val id: java.util.UUID,
        val expand: kotlin.String? = null,
        val includeRemoteData: kotlin.Boolean? = null,
        val remoteFields: kotlin.String? = null,
        val showEnumOrigins: kotlin.String? = null
    )

    /**
    * 
    * Creates an &#x60;Invoice&#x60; object with the given values.
     * @param invoiceEndpointRequest  
     * @param isDebugMode Whether to include debug fields (such as log file links) in the response. (optional)
     * @param runAsync Whether or not third-party updates should be run asynchronously. (optional)
     * @return InvoiceResponse
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesCreate(requestModel: InvoicesApi.InvoicesCreateRequest): InvoiceResponse {
        return invoicesCreateImpl(requestModel)
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesCreateAsync(requestModel: InvoicesApi.InvoicesCreateRequest): CompletableFuture<InvoiceResponse> = GlobalScope.future {
        invoicesCreate(requestModel)
    }

    /**
     * @param invoiceEndpointRequest   * @param isDebugMode Whether to include debug fields (such as log file links) in the response. (optional) * @param runAsync Whether or not third-party updates should be run asynchronously. (optional)
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesCreateExpanded(requestModel: InvoicesApi.InvoicesCreateRequest): InvoiceResponse.Expanded {
        return invoicesCreateImpl(requestModel)
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesCreateExpandedAsync(requestModel: InvoicesApi.InvoicesCreateRequest): CompletableFuture<InvoiceResponse.Expanded> = GlobalScope.future {
        invoicesCreateExpanded(requestModel)
    }

    private suspend inline fun <reified T> invoicesCreateImpl(requestModel: InvoicesApi.InvoicesCreateRequest): T {

        val localVariableAuthNames = listOf<String>("accountTokenAuth", "bearerAuth")

        val localVariableBody = requestModel.invoiceEndpointRequest

        val localVariableQuery = mutableMapOf<String, List<String>>()
            requestModel.isDebugMode?.apply { localVariableQuery["is_debug_mode"] = listOf("$this") }
            requestModel.runAsync?.apply { localVariableQuery["run_async"] = listOf("$this") }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
        RequestMethod.POST,
        "/invoices",
        query = localVariableQuery,
        headers = localVariableHeaders
        )

        return jsonRequest(
        localVariableConfig,
        localVariableBody,
        localVariableAuthNames
        ).body()
    }

    /**
    * 
    * Returns a list of &#x60;Invoice&#x60; objects.
     * @param companyId If provided, will only return invoices for this company. (optional)
     * @param contactId If provided, will only return invoices for this contact. (optional)
     * @param createdAfter If provided, will only return objects created after this datetime. (optional)
     * @param createdBefore If provided, will only return objects created before this datetime. (optional)
     * @param cursor The pagination cursor value. (optional)
     * @param expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. (optional)
     * @param includeDeletedData Whether to include data that was marked as deleted by third party webhooks. (optional)
     * @param includeRemoteData Whether to include the original data Merge fetched from the third-party to produce these models. (optional)
     * @param modifiedAfter If provided, will only return objects modified after this datetime. (optional)
     * @param modifiedBefore If provided, will only return objects modified before this datetime. (optional)
     * @param pageSize Number of results to return per page. (optional)
     * @param remoteFields Deprecated. Use show_enum_origins. (optional)
     * @param remoteId The API provider&#39;s ID for the given object. (optional)
     * @param showEnumOrigins Which fields should be returned in non-normalized form. (optional)
     * @param type If provided, will only return Invoices with this type (optional)
     * @return PaginatedInvoiceList
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesList(requestModel: InvoicesApi.InvoicesListRequest): MergePaginatedResponse<Invoice> {
        return invoicesListImpl(requestModel)
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesListAsync(requestModel: InvoicesApi.InvoicesListRequest): CompletableFuture<MergePaginatedResponse<Invoice>> = GlobalScope.future {
        invoicesList(requestModel)
    }

    /**
     * @param companyId If provided, will only return invoices for this company. (optional) * @param contactId If provided, will only return invoices for this contact. (optional) * @param createdAfter If provided, will only return objects created after this datetime. (optional) * @param createdBefore If provided, will only return objects created before this datetime. (optional) * @param cursor The pagination cursor value. (optional) * @param expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. (optional) * @param includeDeletedData Whether to include data that was marked as deleted by third party webhooks. (optional) * @param includeRemoteData Whether to include the original data Merge fetched from the third-party to produce these models. (optional) * @param modifiedAfter If provided, will only return objects modified after this datetime. (optional) * @param modifiedBefore If provided, will only return objects modified before this datetime. (optional) * @param pageSize Number of results to return per page. (optional) * @param remoteFields Deprecated. Use show_enum_origins. (optional) * @param remoteId The API provider&#39;s ID for the given object. (optional) * @param showEnumOrigins Which fields should be returned in non-normalized form. (optional) * @param type If provided, will only return Invoices with this type (optional)
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesListExpanded(requestModel: InvoicesApi.InvoicesListRequest): MergePaginatedResponse<Invoice.Expanded> {
        return invoicesListImpl(requestModel)
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesListExpandedAsync(requestModel: InvoicesApi.InvoicesListRequest): CompletableFuture<MergePaginatedResponse<Invoice.Expanded>> = GlobalScope.future {
        invoicesListExpanded(requestModel)
    }

    private suspend inline fun <reified T> invoicesListImpl(requestModel: InvoicesApi.InvoicesListRequest): T {

        val localVariableAuthNames = listOf<String>("accountTokenAuth", "bearerAuth")

        val localVariableBody = 
                io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
            requestModel.companyId?.apply { localVariableQuery["company_id"] = listOf(this) }
            requestModel.contactId?.apply { localVariableQuery["contact_id"] = listOf(this) }
            requestModel.createdAfter?.apply { localVariableQuery["created_after"] = listOf("$this") }
            requestModel.createdBefore?.apply { localVariableQuery["created_before"] = listOf("$this") }
            requestModel.cursor?.apply { localVariableQuery["cursor"] = listOf(this) }
            requestModel.expand?.apply { localVariableQuery["expand"] = listOf(this) }
            requestModel.includeDeletedData?.apply { localVariableQuery["include_deleted_data"] = listOf("$this") }
            requestModel.includeRemoteData?.apply { localVariableQuery["include_remote_data"] = listOf("$this") }
            requestModel.modifiedAfter?.apply { localVariableQuery["modified_after"] = listOf("$this") }
            requestModel.modifiedBefore?.apply { localVariableQuery["modified_before"] = listOf("$this") }
            requestModel.pageSize?.apply { localVariableQuery["page_size"] = listOf("$this") }
            requestModel.remoteFields?.apply { localVariableQuery["remote_fields"] = listOf(this) }
            requestModel.remoteId?.apply { localVariableQuery["remote_id"] = listOf(this) }
            requestModel.showEnumOrigins?.apply { localVariableQuery["show_enum_origins"] = listOf(this) }
            requestModel.type?.apply { localVariableQuery["type"] = listOf(this) }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
        RequestMethod.GET,
        "/invoices",
        query = localVariableQuery,
        headers = localVariableHeaders
        )

        return request(
        localVariableConfig,
        localVariableBody,
        localVariableAuthNames
        ).body()
    }

    /**
    * 
    * Returns metadata for &#x60;Invoice&#x60; POSTs.
     * @return MetaResponse
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesMetaPostRetrieve(): MetaResponse {
        return invoicesMetaPostRetrieveImpl()
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesMetaPostRetrieveAsync(): CompletableFuture<MetaResponse> = GlobalScope.future {
        invoicesMetaPostRetrieve()
    }

    /**
    
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesMetaPostRetrieveExpanded(): MetaResponse.Expanded {
        return invoicesMetaPostRetrieveImpl()
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesMetaPostRetrieveExpandedAsync(): CompletableFuture<MetaResponse.Expanded> = GlobalScope.future {
        invoicesMetaPostRetrieveExpanded()
    }

    private suspend inline fun <reified T> invoicesMetaPostRetrieveImpl(): T {

        val localVariableAuthNames = listOf<String>("accountTokenAuth", "bearerAuth")

        val localVariableBody = 
                io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
        RequestMethod.GET,
        "/invoices/meta/post",
        query = localVariableQuery,
        headers = localVariableHeaders
        )

        return request(
        localVariableConfig,
        localVariableBody,
        localVariableAuthNames
        ).body()
    }

    /**
    * 
    * Returns an &#x60;Invoice&#x60; object with the given &#x60;id&#x60;.
     * @param id  
     * @param expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. (optional)
     * @param includeRemoteData Whether to include the original data Merge fetched from the third-party to produce these models. (optional)
     * @param remoteFields Deprecated. Use show_enum_origins. (optional)
     * @param showEnumOrigins Which fields should be returned in non-normalized form. (optional)
     * @return Invoice
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesRetrieve(requestModel: InvoicesApi.InvoicesRetrieveRequest): Invoice {
        return invoicesRetrieveImpl(requestModel)
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesRetrieveAsync(requestModel: InvoicesApi.InvoicesRetrieveRequest): CompletableFuture<Invoice> = GlobalScope.future {
        invoicesRetrieve(requestModel)
    }

    /**
     * @param id   * @param expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces. (optional) * @param includeRemoteData Whether to include the original data Merge fetched from the third-party to produce these models. (optional) * @param remoteFields Deprecated. Use show_enum_origins. (optional) * @param showEnumOrigins Which fields should be returned in non-normalized form. (optional)
    */
    @Suppress("UNCHECKED_CAST")
    open suspend fun invoicesRetrieveExpanded(requestModel: InvoicesApi.InvoicesRetrieveRequest): Invoice.Expanded {
        return invoicesRetrieveImpl(requestModel)
    }

    @Suppress("UNCHECKED_CAST")
    open fun invoicesRetrieveExpandedAsync(requestModel: InvoicesApi.InvoicesRetrieveRequest): CompletableFuture<Invoice.Expanded> = GlobalScope.future {
        invoicesRetrieveExpanded(requestModel)
    }

    private suspend inline fun <reified T> invoicesRetrieveImpl(requestModel: InvoicesApi.InvoicesRetrieveRequest): T {

        val localVariableAuthNames = listOf<String>("accountTokenAuth", "bearerAuth")

        val localVariableBody = 
                io.ktor.client.utils.EmptyContent

        val localVariableQuery = mutableMapOf<String, List<String>>()
            requestModel.expand?.apply { localVariableQuery["expand"] = listOf(this) }
            requestModel.includeRemoteData?.apply { localVariableQuery["include_remote_data"] = listOf("$this") }
            requestModel.remoteFields?.apply { localVariableQuery["remote_fields"] = listOf(this) }
            requestModel.showEnumOrigins?.apply { localVariableQuery["show_enum_origins"] = listOf(this) }

        val localVariableHeaders = mutableMapOf<String, String>()

        val localVariableConfig = RequestConfig<kotlin.Any?>(
        RequestMethod.GET,
        "/invoices/{id}".replace("{" + "id" + "}", "${ requestModel.id }"),
        query = localVariableQuery,
        headers = localVariableHeaders
        )

        return request(
        localVariableConfig,
        localVariableBody,
        localVariableAuthNames
        ).body()
    }

}
